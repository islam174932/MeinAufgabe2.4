{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repro\\\\Fullstack-2024-1\\\\05 -React\\\\3 - Todo App\\\\L\\xF6sungen\\\\bis 2.4 (einschlie\\xDFlich)\\\\frontend\\\\src\\\\components\\\\Card\\\\TodoCard.jsx\";\nimport { CiCircleCheck } from \"react-icons/ci\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoCard({\n  title,\n  done,\n  id,\n  todos,\n  setTodos\n}) {\n  //Rückgabe aller Todo außer, wenn der filter todo.id !== id;\n  //(die id des iterierten todos ist genau die des angeklickten,\n  // dann nicht zurückgeben) nicht zutrifft\n  function handleDeleteOnClick() {\n    setTodos(todos.filter(todo => {\n      return todo.id !== id;\n    }));\n  }\n  //die Callbackfunktion iteriert über die todos vergleicht die id \n  //des iterierten Todo mit der des angeklickten todos und invertiert\n  //den boolean wert von 'done' property. Zuletzt setzt der setter (setTodos)\n  //den Zustand der Todos auf den neuen Wert (die Todos aber\n  //mit dem einem Todo property 'done' auf den anderen Wert (bei true -> false)\n  function handleToggleOnClick() {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.done = !todo.done;\n      }\n      return todo;\n    }));\n  }\n  return (\n    /*#__PURE__*/\n    // Übergebe Styled Element property\n    _jsxDEV(StyledTodoContainer, {\n      done: done,\n      children: [/*#__PURE__*/_jsxDEV(TodoText, {\n        done: done,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CiCircleCheck, {\n        onClick: handleToggleOnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaRegTrashAlt, {\n        onClick: handleDeleteOnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = TodoCard;\nconst TodoText = styled.p`\n    display: inline;\n`;\n\n//Einem Styled Element kann man auch JS Code übergeben\n//Hier wird einem anynonyme Funktion aufgerufen, welches auf das props Argument\n//zugreift und per tenary operator den CSS - Wert setzt\n_c2 = TodoText;\nconst StyledTodoContainer = styled.div`\n    font-family: Arial, Helvetica, sans-serif,\n    color: #41B3A3;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n    margin-bottom: 5px;\n    color: ${props => props.done ? \"green\" : \"red\"};\n`;\n_c3 = StyledTodoContainer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TodoCard\");\n$RefreshReg$(_c2, \"TodoText\");\n$RefreshReg$(_c3, \"StyledTodoContainer\");","map":{"version":3,"names":["CiCircleCheck","FaRegTrashAlt","styled","jsxDEV","_jsxDEV","TodoCard","title","done","id","todos","setTodos","handleDeleteOnClick","filter","todo","handleToggleOnClick","map","StyledTodoContainer","children","TodoText","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","p","_c2","div","props","_c3","$RefreshReg$"],"sources":["D:/Repro/Fullstack-2024-1/05 -React/3 - Todo App/Lösungen/bis 2.4 (einschließlich)/frontend/src/components/Card/TodoCard.jsx"],"sourcesContent":["import { CiCircleCheck } from \"react-icons/ci\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport function TodoCard({title,done,id,todos,setTodos}) {\r\n    //Rückgabe aller Todo außer, wenn der filter todo.id !== id;\r\n    //(die id des iterierten todos ist genau die des angeklickten,\r\n    // dann nicht zurückgeben) nicht zutrifft\r\n    function handleDeleteOnClick() {\r\n        setTodos(todos.filter(todo => {\r\n            return todo.id !== id;\r\n            })\r\n        )\r\n    }\r\n    //die Callbackfunktion iteriert über die todos vergleicht die id \r\n    //des iterierten Todo mit der des angeklickten todos und invertiert\r\n    //den boolean wert von 'done' property. Zuletzt setzt der setter (setTodos)\r\n    //den Zustand der Todos auf den neuen Wert (die Todos aber\r\n    //mit dem einem Todo property 'done' auf den anderen Wert (bei true -> false)\r\n    function handleToggleOnClick() {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.done = !todo.done;\r\n                }\r\n                return todo;\r\n            }) \r\n        )\r\n    }\r\n\r\n    return(\r\n        // Übergebe Styled Element property\r\n        <StyledTodoContainer done={done}>\r\n            <TodoText done={done}>{title}</TodoText>\r\n            <CiCircleCheck onClick={handleToggleOnClick}/>\r\n            <FaRegTrashAlt onClick={handleDeleteOnClick}/>\r\n        </StyledTodoContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst TodoText  = styled.p`\r\n    display: inline;\r\n`\r\n\r\n//Einem Styled Element kann man auch JS Code übergeben\r\n//Hier wird einem anynonyme Funktion aufgerufen, welches auf das props Argument\r\n//zugreift und per tenary operator den CSS - Wert setzt\r\nconst StyledTodoContainer = styled.div`\r\n    font-family: Arial, Helvetica, sans-serif,\r\n    color: #41B3A3;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n    margin-bottom: 5px;\r\n    color: ${(props) => props.done ? \"green\" : \"red\"};\r\n`"],"mappings":";AAAA,SAASA,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,SAASC,QAAQA,CAAC;EAACC,KAAK;EAACC,IAAI;EAACC,EAAE;EAACC,KAAK;EAACC;AAAQ,CAAC,EAAE;EACrD;EACA;EACA;EACA,SAASC,mBAAmBA,CAAA,EAAG;IAC3BD,QAAQ,CAACD,KAAK,CAACG,MAAM,CAACC,IAAI,IAAI;MAC1B,OAAOA,IAAI,CAACL,EAAE,KAAKA,EAAE;IACrB,CAAC,CACL,CAAC;EACL;EACA;EACA;EACA;EACA;EACA;EACA,SAASM,mBAAmBA,CAAA,EAAG;IAC3BJ,QAAQ,CACJD,KAAK,CAACM,GAAG,CAACF,IAAI,IAAI;MACd,IAAIA,IAAI,CAACL,EAAE,KAAKA,EAAE,EAAE;QAChBK,IAAI,CAACN,IAAI,GAAG,CAACM,IAAI,CAACN,IAAI;MAC1B;MACA,OAAOM,IAAI;IACf,CAAC,CACL,CAAC;EACL;EAEA;IAAA;IACI;IACAT,OAAA,CAACY,mBAAmB;MAACT,IAAI,EAAEA,IAAK;MAAAU,QAAA,gBAC5Bb,OAAA,CAACc,QAAQ;QAACX,IAAI,EAAEA,IAAK;QAAAU,QAAA,EAAEX;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACxClB,OAAA,CAACJ,aAAa;QAACuB,OAAO,EAAET;MAAoB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9ClB,OAAA,CAACH,aAAa;QAACsB,OAAO,EAAEZ;MAAoB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;AAE9B;AAACE,EAAA,GAlCenB,QAAQ;AAsCxB,MAAMa,QAAQ,GAAIhB,MAAM,CAACuB,CAAC;AAC1B;AACA,CAAC;;AAED;AACA;AACA;AAAAC,GAAA,GANMR,QAAQ;AAOd,MAAMF,mBAAmB,GAAGd,MAAM,CAACyB,GAAG;AACtC;AACA;AACA;AACA;AACA,aAAcC,KAAK,IAAKA,KAAK,CAACrB,IAAI,GAAG,OAAO,GAAG,KAAK;AACpD,CAAC;AAAAsB,GAAA,GANKb,mBAAmB;AAAA,IAAAQ,EAAA,EAAAE,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}